#!/usr/bin/env python
#
# This is a highly modified version of gl3w_gen.py.
# The original version was written by Slavomir Kaslev
# as part of gl3w which is in the public domain
# and available at https://github.com/skaslev/gl3w.
#
# Copyright (c) 2011 Daniel Kirchner
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#
import re
import os
import urllib.request, urllib.error, urllib.parse

# Download gl3.h
if not os.path.exists('../include/gl3.h'):
    web = urllib.request.urlopen('http://www.opengl.org/registry/api/gl3.h')
    with open('../include/gl3.h', 'wb') as f:
        f.writelines(web.readlines())

# Parse function names from gl3.h
procs = []
p = re.compile(r'GLAPI.*APIENTRY\s+(\w+)')
with open('../include/gl3.h', 'r') as f:
    for line in f:
        m = p.match(line)
        if m:
            procs.append(m.group(1))
# Parse function names from gl3ext.h
with open('../include/gl3ext.h', 'r') as f:
    for line in f:
        m = p.match (line)
        if m:
            procs.append(m.group(1))

def proc_t(proc):
    return { 'p': proc,
             'p_s': proc[2:],
             'p_t': 'PFN' + proc.upper() + 'PROC' }

# Generate gl3w.h
with open('../include/gl3w.h', 'wt') as f:
    f.write (r'''/* This file was generated by gl3w_gen.py.
 * Don't change it directly, change gl3w_gen.py instead. */
#ifndef GL3W_H
#define GL3W_H

#include "gl3.h"
#include "gl3ext.h"

namespace gl {

typedef void *(*GetProcAddressCallback) (const char*);

void InitPrototypes (GetProcAddressCallback getprocaddress);
GLAPI int APIENTRY Unsupported (...);

''')
    for proc in procs:
        f.write('extern %(p_t)s %(p_s)s;\n' % proc_t(proc))
    f.write(r'''

} /* namespace gl */

#endif /* !defined GL3W_H */
''')

# Generate gl3w.cpp
with open('gl3w.cpp', 'wt') as f:
    f.write(r'''/* This file was generated b gl3w_gen.py.
 * Don't change it directoly, change gl3w_gen.py instead.*/
#include "gl3w.h"
#include <stdexcept>

namespace gl {

''')
    for proc in procs:
        f.write('%(p_t)s %(p_s)s =\n'
		'    (%(p_t)s) Unsupported;\n' % proc_t(proc))
    f.write(r'''

GLAPI int APIENTRY Unsupported (...)
{
    throw std::runtime_error ("An unsupported OpenGL entry point was called.");
}

void InitPrototypes (GetProcAddressCallback getprocaddress)
{
    void *ptr;

''')
    for proc in procs:
        f.write('    ptr = getprocaddress ("%(p)s");\n'
		'    if (ptr) %(p_s)s = (%(p_t)s) ptr;\n'
                % proc_t(proc))
    f.write(r'''
}

} /* namespace gl */
''')
